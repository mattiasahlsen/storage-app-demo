org: mattiasahlsen
app: my-first-app

service: my-api

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 4000
    host: 0.0.0.0
    noPrependStageInUrl: true
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    stages:
      - dev
      - test

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: /
          method: GET
  graphql:
    handler: handler.graphqlHandler
    events:
      - http:
          path: /graphql
          method: GET
      - http:
          path: /graphql
          method: POST

resources:
  Resources:
    StorageTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          -
            AttributeName: username
            KeyType: HASH
        AttributeDefinitions:
          -
            AttributeName: username
            AttributeType: S

        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: 'Storage'

    ServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "DynamoRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          -
            PolicyName: "Dynamo-ServiceRole-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "dynamodb:Query"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:DeleteItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Scan"
                    - "dynamodb:UpdateItem"
                  Resource:
                    - "arn:aws:dynamodb:us-east-1:*:table/Users"
                    - "arn:aws:dynamodb:us-east-1:*:table/Users/*"
                    - "arn:aws:dynamodb:us-east-1:*:table/Tweets"
                    - "arn:aws:dynamodb:us-east-1:*:table/Tweets/*"
    XrayLambdaRolePolicy:
      Type: "AWS::IAM::Policy"
      Properties:
        PolicyName: "xray-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Action:
                - "xray:PutTraceSegments"
                - "xray:PutTelemetryRecords"
              Resource:
                - "*"
        Roles:
          - Ref: ServiceRole
